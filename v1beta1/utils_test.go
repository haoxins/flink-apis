package v1beta1

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func Test_IsArgsEqual(t *testing.T) {
	v := IsArgsEqual(nil, nil)
	assert.True(t, v)
	v = IsArgsEqual([]string{}, []string{})
	assert.True(t, v)
	v = IsArgsEqual([]string{""}, []string{""})
	assert.True(t, v)
	v = IsArgsEqual([]string{"", ""}, []string{"", ""})
	assert.True(t, v)

	v = IsArgsEqual([]string{"a"}, []string{"a"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"a", "b"}, []string{"b", "a"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"a", ""}, []string{"", "a"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"a", "b"}, []string{"a", "b"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"a", "b", "c"}, []string{"b", "a", "c"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"a", "b", "c"}, []string{"b"})
	assert.False(t, v)

	v = IsArgsEqual([]string{"-a", "b", "-c"}, []string{"-a", "b", "-c"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"-a", "b", "-c"}, []string{"-c", "-a", "b"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"-a", "b", "-c"}, []string{"c", "-a", "b"})
	assert.False(t, v)
	v = IsArgsEqual([]string{"-a", "b", "-c", "d"}, []string{"-c", "d", "-a", "b"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"-a", "b", "-c", "d"}, []string{"-c", "d", "-a", "bb"})
	assert.False(t, v)
	v = IsArgsEqual([]string{"-a", "b", "d"}, []string{"d", "-a", "b"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"-a", "b", "d"}, []string{"-a", "b", "d"})
	assert.True(t, v)

	v = IsArgsEqual([]string{"--topic", "a", "--name", "xin"}, []string{"--name", "xin", "--topic", "a"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"--name", "xin", "--topic", "a"}, []string{"--name", "xin", "--topic", "a"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"--name", "xin", "ver"}, []string{"--name", "xin", "ver"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"--name", "xin", "ver"}, []string{"ver", "--name", "xin"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"--name", "xin", "-V"}, []string{"--name", "xin", "-V"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"--name", "xin", "-V"}, []string{"-V", "--name", "xin"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"--name", "xin", "--topic", "a"}, []string{"--name", "xin", "--topic", "b"})
	assert.False(t, v)
	v = IsArgsEqual([]string{"--name", "xin", "--topic"}, []string{"--name", "xin", "--topic"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"--name", "xin", "--topic"}, []string{"--topic", "--name", "xin"})
	assert.True(t, v)

	v = IsArgsEqual([]string{"--name", "xin", "-v", "9", "-V", "--topic", "new"}, []string{"--name", "xin", "-v", "9", "-V", "--topic", "new"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"--name", "xin", "-v", "9", "-V", "--topic", "new"}, []string{"-v", "9", "--name", "xin", "-V", "--topic", "new"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"--name", "xin", "-v", "9", "-V", "--topic", "new"}, []string{"-v", "9", "--name", "xin", "--topic", "new", "-V"})
	assert.True(t, v)
	v = IsArgsEqual([]string{"--name", "xin", "-v", "9", "-V", "--topic", "new"}, []string{"-v", "10", "--name", "xin", "--topic", "new", "-V"})
	assert.False(t, v)
}
